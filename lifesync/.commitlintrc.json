{
  "extends": ["@commitlint/config-conventional"],
  "rules": {
    "type-enum": [
      2,
      "always",
      [
        "build",
        "chore",
        "ci",
        "docs",
        "feat",
        "fix",
        "perf",
        "refactor",
        "revert",
        "style",
        "test",
        "security"
      ]
    ],
    "type-case": [2, "always", "lower-case"],
    "type-empty": [2, "never"],
    "scope-case": [2, "always", "lower-case"],
    "subject-case": [2, "always", ["sentence-case", "start-case", "pascal-case", "upper-case", "lower-case"]],
    "subject-empty": [2, "never"],
    "subject-full-stop": [2, "never", "."],
    "header-max-length": [2, "always", 100],
    "body-leading-blank": [1, "always"],
    "body-max-line-length": [2, "always", 100],
    "footer-leading-blank": [1, "always"],
    "footer-max-line-length": [2, "always", 100]
  },
  "prompt": {
    "messages": {
      "type": "Select the type of change that you're committing:",
      "scope": "What is the scope of this change (e.g. component or file name): (press enter to skip)",
      "customScope": "Denote the SCOPE of this change:",
      "subject": "Write a SHORT, IMPERATIVE tense description of the change:\n",
      "body": "Provide a LONGER description of the change (optional). Use \"|\" to break new line:\n",
      "breaking": "List any BREAKING CHANGES (optional). Use \"|\" to break new line:\n",
      "footerPrefixSelect": "Select the ISSUES type of changeList by this change (optional):",
      "customFooterPrefix": "Input ISSUES prefix:",
      "footer": "List any ISSUES by this change. E.g.: #31, #34:\n",
      "generatingByAI": "Generating your AI commit subject...",
      "generatedSelectByAI": "Select suitable subject by AI generated:",
      "confirmCommit": "Are you sure you want to proceed with the commit above?"
    },
    "types": [
      {
        "value": "feat",
        "name": "feat:     ‚ú® A new feature",
        "emoji": ":sparkles:"
      },
      {
        "value": "fix",
        "name": "fix:      üêõ A bug fix",
        "emoji": ":bug:"
      },
      {
        "value": "docs",
        "name": "docs:     üìö Documentation only changes",
        "emoji": ":books:"
      },
      {
        "value": "style",
        "name": "style:    üíé Changes that do not affect the meaning of the code",
        "emoji": ":gem:"
      },
      {
        "value": "refactor",
        "name": "refactor: ‚ôªÔ∏è  A code change that neither fixes a bug nor adds a feature",
        "emoji": ":recycle:"
      },
      {
        "value": "perf",
        "name": "perf:     ‚ö°Ô∏è A code change that improves performance",
        "emoji": ":zap:"
      },
      {
        "value": "test",
        "name": "test:     ‚úÖ Adding missing tests or correcting existing tests",
        "emoji": ":white_check_mark:"
      },
      {
        "value": "build",
        "name": "build:    üî® Changes that affect the build system or external dependencies",
        "emoji": ":hammer:"
      },
      {
        "value": "ci",
        "name": "ci:       üë∑ Changes to our CI configuration files and scripts",
        "emoji": ":construction_worker:"
      },
      {
        "value": "chore",
        "name": "chore:    üîß Other changes that don't modify src or test files",
        "emoji": ":wrench:"
      },
      {
        "value": "revert",
        "name": "revert:   ‚è™Ô∏è Reverts a previous commit",
        "emoji": ":rewind:"
      },
      {
        "value": "security",
        "name": "security: üîíÔ∏è A code change that fixes a security issue",
        "emoji": ":lock:"
      }
    ],
    "useEmoji": true,
    "emojiAlign": "center",
    "useAI": false,
    "aiNumber": 1,
    "themeColorCode": "",
    "scopes": [
      "project-tracking",
      "dashboard",
      "components",
      "utils",
      "types",
      "tests",
      "ci-cd",
      "deployment",
      "config",
      "docs"
    ],
    "allowCustomScopes": true,
    "allowEmptyScopes": true,
    "customScopesAlign": "bottom",
    "customScopesAlias": "custom",
    "emptyScopesAlias": "empty",
    "upperCaseSubject": false,
    "markBreakingChangeMode": false,
    "allowBreakingChanges": ["feat", "fix"],
    "breaklineNumber": 100,
    "breaklineChar": "|",
    "skipQuestions": [],
    "issuePrefixes": [
      {
        "value": "closed",
        "name": "closed:   ISSUES has been processed"
      }
    ],
    "customIssuePrefixAlign": "top",
    "emptyIssuePrefixAlias": "skip",
    "customIssuePrefixAlias": "custom",
    "allowCustomIssuePrefix": true,
    "allowEmptyIssuePrefix": true,
    "confirmColorize": true,
    "maxHeaderLength": 100,
    "maxSubjectLength": 100,
    "minSubjectLength": 0,
    "scopeOverrides": undefined,
    "defaultBody": "",
    "defaultIssues": "",
    "defaultScope": "",
    "defaultSubject": ""
  }
}